{"version":3,"file":"c766964c.js","sources":["../../node_modules/@tomphttp/bare-client/dist/index.js"],"sourcesContent":["// The user likely has overwritten all networking functions after importing bare-client\r\n// It is our responsibility to make sure components of Bare-Client are using native networking functions\r\n// These exports are provided to plugins by @rollup/plugin-inject\r\nconst fetch = globalThis.fetch;\r\nconst WebSocket = globalThis.WebSocket;\r\nconst Request = globalThis.Request;\r\nconst Response = globalThis.Response;\r\nconst WebSocketFields = {\r\n    prototype: {\r\n        send: WebSocket.prototype.send,\r\n    },\r\n    CLOSED: WebSocket.CLOSED,\r\n    CLOSING: WebSocket.CLOSING,\r\n    CONNECTING: WebSocket.CONNECTING,\r\n    OPEN: WebSocket.OPEN,\r\n};\n\nconst maxRedirects = 20;\n\nconst statusEmpty = [101, 204, 205, 304];\r\nconst statusRedirect = [301, 302, 303, 307, 308];\r\nclass BareError extends Error {\r\n    status;\r\n    body;\r\n    constructor(status, body) {\r\n        super(body.message || body.code);\r\n        this.status = status;\r\n        this.body = body;\r\n    }\r\n}\r\nclass Client {\r\n    base;\r\n    /**\r\n     *\r\n     * @param version Version provided by extension\r\n     * @param server Bare Server URL provided by BareClient\r\n     */\r\n    constructor(version, server) {\r\n        this.base = new URL(`./v${version}/`, server);\r\n    }\r\n}\n\n/*\r\n * JavaScript MD5\r\n * Adopted from https://github.com/blueimp/JavaScript-MD5\r\n *\r\n * Copyright 2011, Sebastian Tschan\r\n * https://blueimp.net\r\n *\r\n * Licensed under the MIT license:\r\n * https://opensource.org/licenses/MIT\r\n *\r\n * Based on\r\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\r\n * Digest Algorithm, as defined in RFC 1321.\r\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\r\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\r\n * Distributed under the BSD License\r\n * See http://pajhome.org.uk/crypt/md5 for more info.\r\n */\r\n/**\r\n * Add integers, wrapping at 2^32.\r\n * This uses 16-bit operations internally to work around bugs in interpreters.\r\n *\r\n * @param x First integer\r\n * @param y Second integer\r\n * @returns Sum\r\n */\r\nfunction safeAdd(x, y) {\r\n    const lsw = (x & 0xffff) + (y & 0xffff);\r\n    const msw = (x >> 16) + (y >> 16) + (lsw >> 16);\r\n    return (msw << 16) | (lsw & 0xffff);\r\n}\r\n/**\r\n * Bitwise rotate a 32-bit number to the left.\r\n *\r\n * @param num 32-bit number\r\n * @param cnt Rotation count\r\n * @returns  Rotated number\r\n */\r\nfunction bitRotateLeft(num, cnt) {\r\n    return (num << cnt) | (num >>> (32 - cnt));\r\n}\r\n/**\r\n * Basic operation the algorithm uses.\r\n *\r\n * @param q q\r\n * @param a a\r\n * @param b b\r\n * @param x x\r\n * @param s s\r\n * @param t t\r\n * @returns Result\r\n */\r\nfunction md5cmn(q, a, b, x, s, t) {\r\n    return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\r\n}\r\n/**\r\n * Basic operation the algorithm uses.\r\n *\r\n * @param a a\r\n * @param b b\r\n * @param c c\r\n * @param d d\r\n * @param x x\r\n * @param s s\r\n * @param t t\r\n * @returns Result\r\n */\r\nfunction md5ff(a, b, c, d, x, s, t) {\r\n    return md5cmn((b & c) | (~b & d), a, b, x, s, t);\r\n}\r\n/**\r\n * Basic operation the algorithm uses.\r\n *\r\n * @param a a\r\n * @param b b\r\n * @param c c\r\n * @param d d\r\n * @param x x\r\n * @param s s\r\n * @param t t\r\n * @returns Result\r\n */\r\nfunction md5gg(a, b, c, d, x, s, t) {\r\n    return md5cmn((b & d) | (c & ~d), a, b, x, s, t);\r\n}\r\n/**\r\n * Basic operation the algorithm uses.\r\n *\r\n * @param a a\r\n * @param b b\r\n * @param c c\r\n * @param d d\r\n * @param x x\r\n * @param s s\r\n * @param t t\r\n * @returns Result\r\n */\r\nfunction md5hh(a, b, c, d, x, s, t) {\r\n    return md5cmn(b ^ c ^ d, a, b, x, s, t);\r\n}\r\n/**\r\n * Basic operation the algorithm uses.\r\n *\r\n * @param a a\r\n * @param b b\r\n * @param c c\r\n * @param d d\r\n * @param x x\r\n * @param s s\r\n * @param t t\r\n * @returns Result\r\n */\r\nfunction md5ii(a, b, c, d, x, s, t) {\r\n    return md5cmn(c ^ (b | ~d), a, b, x, s, t);\r\n}\r\n/**\r\n * Calculate the MD5 of an array of little-endian words, and a bit length.\r\n *\r\n * @param x Array of little-endian words\r\n * @param len Bit length\r\n * @returns MD5 Array\r\n */\r\nfunction binlMD5(x, len) {\r\n    /* append padding */\r\n    x[len >> 5] |= 0x80 << len % 32;\r\n    x[(((len + 64) >>> 9) << 4) + 14] = len;\r\n    let a = 1732584193;\r\n    let b = -271733879;\r\n    let c = -1732584194;\r\n    let d = 271733878;\r\n    for (let i = 0; i < x.length; i += 16) {\r\n        const olda = a;\r\n        const oldb = b;\r\n        const oldc = c;\r\n        const oldd = d;\r\n        a = md5ff(a, b, c, d, x[i], 7, -680876936);\r\n        d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\r\n        c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\r\n        b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\r\n        a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\r\n        d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\r\n        c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\r\n        b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\r\n        a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\r\n        d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\r\n        c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\r\n        b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\r\n        a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\r\n        d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\r\n        c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\r\n        b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\r\n        a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\r\n        d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\r\n        c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\r\n        b = md5gg(b, c, d, a, x[i], 20, -373897302);\r\n        a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\r\n        d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\r\n        c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\r\n        b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\r\n        a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\r\n        d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\r\n        c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\r\n        b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\r\n        a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\r\n        d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\r\n        c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\r\n        b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\r\n        a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\r\n        d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\r\n        c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\r\n        b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\r\n        a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\r\n        d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\r\n        c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\r\n        b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\r\n        a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\r\n        d = md5hh(d, a, b, c, x[i], 11, -358537222);\r\n        c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\r\n        b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\r\n        a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\r\n        d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\r\n        c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\r\n        b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\r\n        a = md5ii(a, b, c, d, x[i], 6, -198630844);\r\n        d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\r\n        c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\r\n        b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\r\n        a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\r\n        d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\r\n        c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\r\n        b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\r\n        a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\r\n        d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\r\n        c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\r\n        b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\r\n        a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\r\n        d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\r\n        c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\r\n        b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\r\n        a = safeAdd(a, olda);\r\n        b = safeAdd(b, oldb);\r\n        c = safeAdd(c, oldc);\r\n        d = safeAdd(d, oldd);\r\n    }\r\n    return [a, b, c, d];\r\n}\r\n/**\r\n * Convert an array of little-endian words to a string\r\n *\r\n * @param input MD5 Array\r\n * @returns MD5 string\r\n */\r\nfunction binl2rstr(input) {\r\n    let output = '';\r\n    const length32 = input.length * 32;\r\n    for (let i = 0; i < length32; i += 8) {\r\n        output += String.fromCharCode((input[i >> 5] >>> i % 32) & 0xff);\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * Convert a raw string to an array of little-endian words\r\n * Characters >255 have their high-byte silently ignored.\r\n *\r\n * @param input Raw input string\r\n * @returns Array of little-endian words\r\n */\r\nfunction rstr2binl(input) {\r\n    const output = [];\r\n    const outputLen = input.length >> 2;\r\n    for (let i = 0; i < outputLen; i += 1) {\r\n        output[i] = 0;\r\n    }\r\n    const length8 = input.length * 8;\r\n    for (let i = 0; i < length8; i += 8) {\r\n        output[i >> 5] |= (input.charCodeAt(i / 8) & 0xff) << i % 32;\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * Calculate the MD5 of a raw string\r\n *\r\n * @param s Input string\r\n * @returns Raw MD5 string\r\n */\r\nfunction rstrMD5(s) {\r\n    return binl2rstr(binlMD5(rstr2binl(s), s.length * 8));\r\n}\r\n/**\r\n * Calculates the HMAC-MD5 of a key and some data (raw strings)\r\n *\r\n * @param key HMAC key\r\n * @param data Raw input string\r\n * @returns Raw MD5 string\r\n */\r\nfunction rstrHMACMD5(key, data) {\r\n    let bkey = rstr2binl(key);\r\n    const ipad = [];\r\n    const opad = [];\r\n    if (bkey.length > 16) {\r\n        bkey = binlMD5(bkey, key.length * 8);\r\n    }\r\n    for (let i = 0; i < 16; i += 1) {\r\n        ipad[i] = bkey[i] ^ 0x36363636;\r\n        opad[i] = bkey[i] ^ 0x5c5c5c5c;\r\n    }\r\n    const hash = binlMD5(ipad.concat(rstr2binl(data)), 512 + data.length * 8);\r\n    return binl2rstr(binlMD5(opad.concat(hash), 512 + 128));\r\n}\r\n/**\r\n * Convert a raw string to a hex string\r\n *\r\n * @param input Raw input string\r\n * @returns Hex encoded string\r\n */\r\nfunction rstr2hex(input) {\r\n    const hexTab = '0123456789abcdef';\r\n    let output = '';\r\n    for (let i = 0; i < input.length; i += 1) {\r\n        const x = input.charCodeAt(i);\r\n        output += hexTab.charAt((x >>> 4) & 0x0f) + hexTab.charAt(x & 0x0f);\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * Encode a string as UTF-8\r\n *\r\n * @param input Input string\r\n * @returns UTF8 string\r\n */\r\nfunction str2rstrUTF8(input) {\r\n    return unescape(encodeURIComponent(input));\r\n}\r\n/**\r\n * Encodes input string as raw MD5 string\r\n *\r\n * @param s Input string\r\n * @returns Raw MD5 string\r\n */\r\nfunction rawMD5(s) {\r\n    return rstrMD5(str2rstrUTF8(s));\r\n}\r\n/**\r\n * Encodes input string as Hex encoded string\r\n *\r\n * @param s Input string\r\n * @returns Hex encoded string\r\n */\r\nfunction hexMD5(s) {\r\n    return rstr2hex(rawMD5(s));\r\n}\r\n/**\r\n * Calculates the raw HMAC-MD5 for the given key and data\r\n *\r\n * @param k HMAC key\r\n * @param d Input string\r\n * @returns Raw MD5 string\r\n */\r\nfunction rawHMACMD5(k, d) {\r\n    return rstrHMACMD5(str2rstrUTF8(k), str2rstrUTF8(d));\r\n}\r\n/**\r\n * Calculates the Hex encoded HMAC-MD5 for the given key and data\r\n *\r\n * @param k HMAC key\r\n * @param d Input string\r\n * @returns Raw MD5 string\r\n */\r\nfunction hexHMACMD5(k, d) {\r\n    return rstr2hex(rawHMACMD5(k, d));\r\n}\r\n/**\r\n * Calculates MD5 value for a given string.\r\n * If a key is provided, calculates the HMAC-MD5 value.\r\n * Returns a Hex encoded string unless the raw argument is given.\r\n *\r\n * @param string Input string\r\n * @param key HMAC key\r\n * @param raw Raw output switch\r\n * @returns MD5 output\r\n */\r\nfunction md5(string, key, raw) {\r\n    if (!key) {\r\n        if (!raw) {\r\n            return hexMD5(string);\r\n        }\r\n        return rawMD5(string);\r\n    }\r\n    if (!raw) {\r\n        return hexHMACMD5(key, string);\r\n    }\r\n    return rawHMACMD5(key, string);\r\n}\n\nconst MAX_HEADER_VALUE = 3072;\r\n/**\r\n *\r\n * Splits headers according to spec\r\n * @param headers\r\n * @returns Split headers\r\n */\r\nfunction splitHeaders(headers) {\r\n    const output = new Headers(headers);\r\n    if (headers.has('x-bare-headers')) {\r\n        const value = headers.get('x-bare-headers');\r\n        if (value.length > MAX_HEADER_VALUE) {\r\n            output.delete('x-bare-headers');\r\n            let split = 0;\r\n            for (let i = 0; i < value.length; i += MAX_HEADER_VALUE) {\r\n                const part = value.slice(i, i + MAX_HEADER_VALUE);\r\n                const id = split++;\r\n                output.set(`x-bare-headers-${id}`, `;${part}`);\r\n            }\r\n        }\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * Joins headers according to spec\r\n * @param headers\r\n * @returns Joined headers\r\n */\r\nfunction joinHeaders(headers) {\r\n    const output = new Headers(headers);\r\n    const prefix = 'x-bare-headers';\r\n    if (headers.has(`${prefix}-0`)) {\r\n        const join = [];\r\n        for (const [header, value] of headers) {\r\n            if (!header.startsWith(prefix)) {\r\n                continue;\r\n            }\r\n            if (!value.startsWith(';')) {\r\n                throw new BareError(400, {\r\n                    code: 'INVALID_BARE_HEADER',\r\n                    id: `request.headers.${header}`,\r\n                    message: `Value didn't begin with semi-colon.`,\r\n                });\r\n            }\r\n            const id = parseInt(header.slice(prefix.length + 1));\r\n            join[id] = value.slice(1);\r\n            output.delete(header);\r\n        }\r\n        output.set(prefix, join.join(''));\r\n    }\r\n    return output;\r\n}\n\nclass ClientV3 extends Client {\r\n    ws;\r\n    http;\r\n    constructor(server) {\r\n        super(3, server);\r\n        this.ws = new URL(this.base);\r\n        this.http = new URL(this.base);\r\n        if (this.ws.protocol === 'https:') {\r\n            this.ws.protocol = 'wss:';\r\n        }\r\n        else {\r\n            this.ws.protocol = 'ws:';\r\n        }\r\n    }\r\n    connect(remote, protocols, getRequestHeaders, onMeta, onReadyState) {\r\n        const ws = new WebSocket(this.ws);\r\n        const cleanup = () => {\r\n            ws.removeEventListener('close', closeListener);\r\n            ws.removeEventListener('message', messageListener);\r\n        };\r\n        const closeListener = () => {\r\n            cleanup();\r\n        };\r\n        const messageListener = (event) => {\r\n            cleanup();\r\n            // ws.binaryType is irrelevant when sending text\r\n            if (typeof event.data !== 'string')\r\n                throw new TypeError('the first websocket message was not a text frame');\r\n            const message = JSON.parse(event.data);\r\n            // finally\r\n            if (message.type !== 'open')\r\n                throw new TypeError('message was not of open type');\r\n            event.stopImmediatePropagation();\r\n            onMeta({\r\n                protocol: message.protocol,\r\n                setCookies: message.setCookies,\r\n            });\r\n            // now we want the client to see the websocket is open and ready to communicate with the remote\r\n            onReadyState(WebSocketFields.OPEN);\r\n            ws.dispatchEvent(new Event('open'));\r\n        };\r\n        ws.addEventListener('close', closeListener);\r\n        ws.addEventListener('message', messageListener);\r\n        // CONNECTED TO THE BARE SERVER, NOT THE REMOTE\r\n        ws.addEventListener('open', (event) => {\r\n            // we have to cancel this event because it doesn't reflect the connection to the remote\r\n            // once we are actually connected to the remote, we can dispatch a fake open event.\r\n            event.stopImmediatePropagation();\r\n            // we need to fake the readyState value again so it remains CONNECTING\r\n            // right now, it's open because we just connected to the remote\r\n            // but we need to fake this from the client so it thinks it's still connecting\r\n            onReadyState(WebSocketFields.CONNECTING);\r\n            getRequestHeaders().then((headers) => WebSocketFields.prototype.send.call(ws, JSON.stringify({\r\n                type: 'connect',\r\n                remote: remote.toString(),\r\n                protocols,\r\n                headers,\r\n                forwardHeaders: [],\r\n            })));\r\n        }, \r\n        // only block the open event once\r\n        { once: true });\r\n        return ws;\r\n    }\r\n    async request(method, requestHeaders, body, remote, cache, duplex, signal) {\r\n        if (remote.protocol.startsWith('blob:')) {\r\n            const response = await fetch(remote);\r\n            const result = new Response(response.body, response);\r\n            result.rawHeaders = Object.fromEntries(response.headers);\r\n            result.rawResponse = response;\r\n            return result;\r\n        }\r\n        const bareHeaders = {};\r\n        if (requestHeaders instanceof Headers) {\r\n            for (const [header, value] of requestHeaders) {\r\n                bareHeaders[header] = value;\r\n            }\r\n        }\r\n        else {\r\n            for (const header in requestHeaders) {\r\n                bareHeaders[header] = requestHeaders[header];\r\n            }\r\n        }\r\n        const options = {\r\n            credentials: 'omit',\r\n            method: method,\r\n            signal,\r\n        };\r\n        if (cache !== 'only-if-cached') {\r\n            options.cache = cache;\r\n        }\r\n        if (body !== undefined) {\r\n            options.body = body;\r\n        }\r\n        if (duplex !== undefined) {\r\n            // @ts-ignore\r\n            options.duplex = duplex;\r\n        }\r\n        options.headers = this.createBareHeaders(remote, bareHeaders);\r\n        const response = await fetch(this.http + '?cache=' + md5(remote.toString()), options);\r\n        const readResponse = await this.readBareResponse(response);\r\n        const result = new Response(statusEmpty.includes(readResponse.status) ? undefined : response.body, {\r\n            status: readResponse.status,\r\n            statusText: readResponse.statusText ?? undefined,\r\n            headers: new Headers(readResponse.headers),\r\n        });\r\n        result.rawHeaders = readResponse.headers;\r\n        result.rawResponse = response;\r\n        return result;\r\n    }\r\n    async readBareResponse(response) {\r\n        if (!response.ok) {\r\n            throw new BareError(response.status, await response.json());\r\n        }\r\n        const responseHeaders = joinHeaders(response.headers);\r\n        const result = {};\r\n        const xBareStatus = responseHeaders.get('x-bare-status');\r\n        if (xBareStatus !== null)\r\n            result.status = parseInt(xBareStatus);\r\n        const xBareStatusText = responseHeaders.get('x-bare-status-text');\r\n        if (xBareStatusText !== null)\r\n            result.statusText = xBareStatusText;\r\n        const xBareHeaders = responseHeaders.get('x-bare-headers');\r\n        if (xBareHeaders !== null)\r\n            result.headers = JSON.parse(xBareHeaders);\r\n        return result;\r\n    }\r\n    createBareHeaders(remote, bareHeaders, forwardHeaders = [], passHeaders = [], passStatus = []) {\r\n        const headers = new Headers();\r\n        headers.set('x-bare-url', remote.toString());\r\n        headers.set('x-bare-headers', JSON.stringify(bareHeaders));\r\n        for (const header of forwardHeaders) {\r\n            headers.append('x-bare-forward-headers', header);\r\n        }\r\n        for (const header of passHeaders) {\r\n            headers.append('x-bare-pass-headers', header);\r\n        }\r\n        for (const status of passStatus) {\r\n            headers.append('x-bare-pass-status', status.toString());\r\n        }\r\n        splitHeaders(headers);\r\n        return headers;\r\n    }\r\n}\n\n/*\r\n * WebSocket helpers\r\n */\r\nconst validChars = \"!#$%&'*+-.0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ^_`abcdefghijklmnopqrstuvwxyz|~\";\r\nfunction validProtocol(protocol) {\r\n    for (let i = 0; i < protocol.length; i++) {\r\n        const char = protocol[i];\r\n        if (!validChars.includes(char)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\n\nconst clientCtors = [\r\n    ['v3', ClientV3],\r\n];\r\nasync function fetchManifest(server, signal) {\r\n    const outgoing = await fetch(server, { signal });\r\n    if (!outgoing.ok) {\r\n        throw new Error(`Unable to fetch Bare meta: ${outgoing.status} ${await outgoing.text()}`);\r\n    }\r\n    return await outgoing.json();\r\n}\r\n// get the unhooked value\r\nconst getRealReadyState = Object.getOwnPropertyDescriptor(WebSocket.prototype, 'readyState').get;\r\nconst wsProtocols = ['ws:', 'wss:'];\r\nclass BareClient {\r\n    manifest;\r\n    client;\r\n    server;\r\n    working;\r\n    onDemand;\r\n    onDemandSignal;\r\n    constructor(server, _) {\r\n        this.server = new URL(server);\r\n        if (!_ || _ instanceof AbortSignal) {\r\n            this.onDemand = true;\r\n            this.onDemandSignal = _;\r\n        }\r\n        else {\r\n            this.onDemand = false;\r\n            this.loadManifest(_);\r\n        }\r\n    }\r\n    loadManifest(manifest) {\r\n        this.manifest = manifest;\r\n        this.client = this.getClient();\r\n        return this.client;\r\n    }\r\n    demand() {\r\n        if (!this.onDemand)\r\n            return this.client;\r\n        if (!this.working)\r\n            this.working = fetchManifest(this.server, this.onDemandSignal)\r\n                .then((manifest) => this.loadManifest(manifest))\r\n                .catch((err) => {\r\n                // allow the next request to re-fetch the manifest\r\n                // this is to prevent BareClient from permanently failing when used on demand\r\n                delete this.working;\r\n                throw err;\r\n            });\r\n        return this.working;\r\n    }\r\n    getClient() {\r\n        // newest-oldest\r\n        for (const [version, ctor] of clientCtors)\r\n            if (this.manifest.versions.includes(version))\r\n                return new ctor(this.server);\r\n        throw new Error('Unable to find compatible client version. Starting from v2.0.0, @tomphttp/bare-client only supports Bare servers v3+. For more information, see https://github.com/tomphttp/bare-client/');\r\n    }\r\n    createWebSocket(remote, protocols = [], options) {\r\n        if (!this.client)\r\n            throw new TypeError('You need to wait for the client to finish fetching the manifest before creating any WebSockets. Try caching the manifest data before making this request.');\r\n        try {\r\n            remote = new URL(remote);\r\n        }\r\n        catch (err) {\r\n            throw new DOMException(`Faiiled to construct 'WebSocket': The URL '${remote}' is invalid.`);\r\n        }\r\n        if (!wsProtocols.includes(remote.protocol))\r\n            throw new DOMException(`Failed to construct 'WebSocket': The URL's scheme must be either 'ws' or 'wss'. '${remote.protocol}' is not allowed.`);\r\n        if (!Array.isArray(protocols))\r\n            protocols = [protocols];\r\n        protocols = protocols.map(String);\r\n        for (const proto of protocols)\r\n            if (!validProtocol(proto))\r\n                throw new DOMException(`Failed to construct 'WebSocket': The subprotocol '${proto}' is invalid.`);\r\n        const socket = this.client.connect(remote, protocols, async () => {\r\n            const resolvedHeaders = typeof options.headers === 'function'\r\n                ? await options.headers()\r\n                : options.headers || {};\r\n            const requestHeaders = resolvedHeaders instanceof Headers\r\n                ? Object.fromEntries(resolvedHeaders)\r\n                : resolvedHeaders;\r\n            // user is expected to specify user-agent and origin\r\n            // both are in spec\r\n            requestHeaders['Host'] = remote.host;\r\n            // requestHeaders['Origin'] = origin;\r\n            requestHeaders['Pragma'] = 'no-cache';\r\n            requestHeaders['Cache-Control'] = 'no-cache';\r\n            requestHeaders['Upgrade'] = 'websocket';\r\n            // requestHeaders['User-Agent'] = navigator.userAgent;\r\n            requestHeaders['Connection'] = 'Upgrade';\r\n            return requestHeaders;\r\n        }, (meta) => {\r\n            fakeProtocol = meta.protocol;\r\n            if (options.setCookiesCallback)\r\n                options.setCookiesCallback(meta.setCookies);\r\n        }, (readyState) => {\r\n            fakeReadyState = readyState;\r\n        }, options.webSocketImpl || WebSocket);\r\n        // protocol is always an empty before connecting\r\n        // updated when we receive the metadata\r\n        // this value doesn't change when it's CLOSING or CLOSED etc\r\n        let fakeProtocol = '';\r\n        let fakeReadyState = WebSocketFields.CONNECTING;\r\n        const getReadyState = () => {\r\n            const realReadyState = getRealReadyState.call(socket);\r\n            // readyState should only be faked when the real readyState is OPEN\r\n            return realReadyState === WebSocketFields.OPEN\r\n                ? fakeReadyState\r\n                : realReadyState;\r\n        };\r\n        if (options.readyStateHook)\r\n            options.readyStateHook(socket, getReadyState);\r\n        else {\r\n            // we have to hook .readyState ourselves\r\n            Object.defineProperty(socket, 'readyState', {\r\n                get: getReadyState,\r\n                configurable: true,\r\n                enumerable: true,\r\n            });\r\n        }\r\n        /**\r\n         * @returns The error that should be thrown if send() were to be called on this socket according to the fake readyState value\r\n         */\r\n        const getSendError = () => {\r\n            const readyState = getReadyState();\r\n            if (readyState === WebSocketFields.CONNECTING)\r\n                return new DOMException(\"Failed to execute 'send' on 'WebSocket': Still in CONNECTING state.\");\r\n        };\r\n        if (options.sendErrorHook)\r\n            options.sendErrorHook(socket, getSendError);\r\n        else {\r\n            // we have to hook .send ourselves\r\n            // use ...args to avoid giving the number of args a quantity\r\n            // no arguments will trip the following error: TypeError: Failed to execute 'send' on 'WebSocket': 1 argument required, but only 0 present.\r\n            socket.send = function (...args) {\r\n                const error = getSendError();\r\n                if (error)\r\n                    throw error;\r\n                else\r\n                    WebSocketFields.prototype.send.call(this, ...args);\r\n            };\r\n        }\r\n        if (options.urlHook)\r\n            options.urlHook(socket, remote);\r\n        else\r\n            Object.defineProperty(socket, 'url', {\r\n                get: () => remote.toString(),\r\n                configurable: true,\r\n                enumerable: true,\r\n            });\r\n        const getProtocol = () => fakeProtocol;\r\n        if (options.protocolHook)\r\n            options.protocolHook(socket, getProtocol);\r\n        else\r\n            Object.defineProperty(socket, 'protocol', {\r\n                get: getProtocol,\r\n                configurable: true,\r\n                enumerable: true,\r\n            });\r\n        return socket;\r\n    }\r\n    async fetch(url, init) {\r\n        const req = isUrlLike(url) ? new Request(url, init) : url;\r\n        // try to use init.headers because it may contain capitalized headers\r\n        // furthermore, important headers on the Request class are blocked...\r\n        // we should try to preserve the capitalization due to quirks with earlier servers\r\n        const inputHeaders = init?.headers || req.headers;\r\n        const headers = inputHeaders instanceof Headers\r\n            ? Object.fromEntries(inputHeaders)\r\n            : inputHeaders;\r\n        // @ts-ignore\r\n        const duplex = init?.duplex;\r\n        const body = init?.body || req.body;\r\n        let urlO = new URL(req.url);\r\n        const client = await this.demand();\r\n        for (let i = 0;; i++) {\r\n            if ('host' in headers)\r\n                headers.host = urlO.host;\r\n            else\r\n                headers.Host = urlO.host;\r\n            const response = await client.request(req.method, headers, body, urlO, req.cache, duplex, req.signal);\r\n            response.finalURL = urlO.toString();\r\n            const redirect = init?.redirect || req.redirect;\r\n            if (statusRedirect.includes(response.status)) {\r\n                switch (redirect) {\r\n                    case 'follow': {\r\n                        const location = response.headers.get('location');\r\n                        if (maxRedirects > i && location !== null) {\r\n                            urlO = new URL(location, urlO);\r\n                            continue;\r\n                        }\r\n                        else\r\n                            throw new TypeError('Failed to fetch');\r\n                    }\r\n                    case 'error':\r\n                        throw new TypeError('Failed to fetch');\r\n                    case 'manual':\r\n                        return response;\r\n                }\r\n            }\r\n            else {\r\n                return response;\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction isUrlLike(url) {\r\n    return typeof url === 'string' || url instanceof URL;\r\n}\n\n/**\r\n *\r\n * Facilitates fetching the Bare server and constructing a BareClient.\r\n * @param server Bare server\r\n * @param signal Abort signal when fetching the manifest\r\n */\r\nasync function createBareClient(server, signal) {\r\n    const manifest = await fetchManifest(server, signal);\r\n    return new BareClient(server, manifest);\r\n}\n\nexport { BareClient, BareError, Client, createBareClient, fetchManifest, maxRedirects, statusEmpty, statusRedirect };\n//# sourceMappingURL=index.js.map\n"],"names":["fetch","WebSocket","Request","Response","WebSocketFields","maxRedirects","statusEmpty","statusRedirect","BareError","status","body","__publicField","Client","version","server","safeAdd","x","y","lsw","bitRotateLeft","num","cnt","md5cmn","q","b","t","md5ff","a","c","d","s","md5gg","md5hh","md5ii","binlMD5","len","i","olda","oldb","oldc","oldd","binl2rstr","input","output","length32","rstr2binl","outputLen","length8","rstrMD5","rstrHMACMD5","key","data","bkey","ipad","opad","hash","rstr2hex","hexTab","str2rstrUTF8","rawMD5","hexMD5","rawHMACMD5","k","hexHMACMD5","md5","string","raw","MAX_HEADER_VALUE","splitHeaders","headers","value","split","part","id","joinHeaders","prefix","join","header","ClientV3","remote","protocols","getRequestHeaders","onMeta","onReadyState","ws","cleanup","closeListener","messageListener","event","message","method","requestHeaders","cache","duplex","signal","response","result","bareHeaders","options","readResponse","responseHeaders","xBareStatus","xBareStatusText","xBareHeaders","forwardHeaders","passHeaders","passStatus","validChars","validProtocol","protocol","char","clientCtors","fetchManifest","outgoing","getRealReadyState","wsProtocols","BareClient","_","manifest","err","ctor","proto","socket","resolvedHeaders","meta","fakeProtocol","readyState","fakeReadyState","getReadyState","realReadyState","getSendError","args","error","getProtocol","url","init","req","isUrlLike","inputHeaders","urlO","client","redirect","location"],"mappings":"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","x_google_ignoreList":[0]}